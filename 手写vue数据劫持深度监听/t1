webpackJsonp([0], {

    /***/
    611: /***/
    (function(module, exports, __webpack_require__) {

        var disposed = false
        function injectStyle(ssrContext) {
            if (disposed)
                return
            __webpack_require__(617)
        }
        var Component = __webpack_require__(20)(/* script */
        __webpack_require__(620), /* template */
        __webpack_require__(621), /* styles */
        injectStyle, /* scopeId */
        "data-v-c3319210", /* moduleIdentifier (server only) */
        null)
        Component.options.__file = "/Users/jason/Documents/xmccb-web/src/modules/xm_risk_evaluate/components/mulQuestionMode.vue"
        if (Component.esModule && Object.keys(Component.esModule).some(function(key) {
            return key !== "default" && key.substr(0, 2) !== "__"
        })) {
            console.error("named exports are not supported in *.vue files.")
        }
        if (Component.options.functional) {
            console.error("[vue-loader] mulQuestionMode.vue: functional components are not supported with templates, they should use render functions.")
        }

        /* hot reload */
        if (true) {
            (function() {
                var hotAPI = __webpack_require__(6)
                hotAPI.install(__webpack_require__(11), false)
                if (!hotAPI.compatible)
                    return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-c3319210", Component.options)
                } else {
                    hotAPI.reload("data-v-c3319210", Component.options)
                }
                module.hot.dispose(function(data) {
                    disposed = true
                })
            }
            )()
        }

        module.exports = Component.exports

        /***/
    }
    ),

    /***/
    613: /***/
    (function(module, exports, __webpack_require__) {

        var escape = __webpack_require__(625);
        exports = module.exports = __webpack_require__(615)(false);
        // imports

        // module
        exports.push([module.i, "\n@charset \"UTF-8\";\n/*\n *   MINIMIZE RESET STYLES\n *    @Author Liuls  \n *\n */\n/*\n    * 混合\n    * @author liyilei\n    * @latest update 2018.4.23\n*/\n.content[data-v-c3319210] {\n  width: 100vw;\n  background-color: #f8f8f8;\n}\n.content .question[data-v-c3319210] {\n    width: 100%;\n}\n.content .question > li[data-v-c3319210] {\n      background-color: #ffffff;\n      padding: 0.2rem 0.3rem;\n      width: -webkit-calc(100vw - 1.2rem);\n      width: calc(100vw - 1.2rem);\n      margin: .32rem auto 0;\n}\n.content .question .question[data-v-c3319210] {\n      font-size: .32rem;\n      color: #333333;\n      line-height: .48rem;\n      padding: .28rem 0;\n}\n.content .question .item[data-v-c3319210] {\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: flex;\n      -webkit-box-pack: justify;\n      -webkit-justify-content: space-between;\n              justify-content: space-between;\n      -webkit-box-align: center;\n      -webkit-align-items: center;\n              align-items: center;\n      line-height: .4rem;\n      padding: .32rem 0;\n}\n.content .question .item span[data-v-c3319210] {\n        max-width: -webkit-calc(100% - .4rem);\n        max-width: calc(100% - .4rem);\n}\n.content .question input[data-v-c3319210] {\n      width: .32rem;\n      height: .32rem;\n      background: url(" + escape(__webpack_require__(618)) + ") no-repeat;\n      background-size: contain;\n}\n.content .question .on[data-v-c3319210] {\n      background-image: url(" + escape(__webpack_require__(619)) + ");\n}\n.content .ynet-btn-box[data-v-c3319210] {\n    margin-top: 1.2rem;\n    padding: 0 .6rem;\n    height: .88rem;\n    width: -webkit-calc(100% - 1.2rem);\n    width: calc(100% - 1.2rem);\n}\n.content .ynet-btn-box .ynet-btn[data-v-c3319210] {\n      width: 100%;\n      height: 100%;\n      border-radius: 6px;\n}\n", ""]);

        // exports

        /***/
    }
    ),

    /***/
    617: /***/
    (function(module, exports, __webpack_require__) {

        // style-loader: Adds some css to the DOM by adding a <style> tag

        // load the styles
        var content = __webpack_require__(613);
        if (typeof content === 'string')
            content = [[module.i, content, '']];
        if (content.locals)
            module.exports = content.locals;
        // add the styles to the DOM
        var update = __webpack_require__(616)("500c5628", content, false, {});
        // Hot Module Replacement
        if (true) {
            // When the styles change, update the <style> tags
            if (!content.locals) {
                module.hot.accept(613, function() {
                    var newContent = __webpack_require__(613);
                    if (typeof newContent === 'string')
                        newContent = [[module.i, newContent, '']];
                    update(newContent);
                });
            }
            // When the module is disposed, remove the <style> tags
            module.hot.dispose(function() {
                update();
            });
        }

        /***/
    }
    ),

    /***/
    618: /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "img/off.8ae2067.png";

        /***/
    }
    ),

    /***/
    619: /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__.p + "img/on.54d58fb.png";

        /***/
    }
    ),

    /***/
    620: /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: true
        });
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__comps_ynet_button__ = __webpack_require__(66);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__comps_ynet_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__comps_ynet_button__);
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //

        /* harmony default export */
        __webpack_exports__["default"] = ({
            name: "MulQuestionMode",
            components: {
                ynetButton: __WEBPACK_IMPORTED_MODULE_0__comps_ynet_button___default.a
            },
            props: {
                questionList: {
                    type: Array,
                    default: function _default() {
                        return [];
                    }
                }
            },
            methods: {
                getResult: function getResult() {
                    this.$emit('getResult');
                },
                selectAnswer: function selectAnswer(qI, aI) {
                    this.$emit('selectAnswer', {
                        qI: qI,
                        aI: aI
                    });
                }
            }
        });

        /***/
    }
    ),

    /***/
    621: /***/
    (function(module, exports, __webpack_require__) {

        module.exports = {
            render: function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c('div', {
                    staticClass: "content"
                }, [_c('ul', {
                    staticClass: "question"
                }, _vm._l((_vm.questionList), function(item, index) {
                    return _c('li', {
                        key: item.question
                    }, [_c('p', {
                        staticClass: "question"
                    }, [_vm._v("\n        " + _vm._s(item.question) + "\n      ")]), _vm._v(" "), _c('ul', {
                        staticClass: "answer"
                    }, _vm._l((item.answer), function(answer, answerIndex) {
                        return _c('li', {
                            key: answer,
                            staticClass: "item",
                            on: {
                                "click": function($event) {
                                    return _vm.selectAnswer(index, answerIndex)
                                }
                            }
                        }, [_c('span', [_vm._v(_vm._s(answer))]), _vm._v(" "), _c('input', {
                            class: item.selectIndex == answerIndex ? 'on' : '',
                            attrs: {
                                "type": "checkbox"
                            }
                        })])
                    }), 0)])
                }), 0), _vm._v(" "), _c('div', {
                    staticClass: "ynet-btn-box"
                }, [_c('ynet-button', {
                    on: {
                        "click-native": _vm.getResult
                    }
                }, [_vm._v("\n      开始\n    ")])], 1)])
            },
            staticRenderFns: []
        }
        module.exports.render._withStripped = true
        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(6).rerender("data-v-c3319210", module.exports)
            }
        }

        /***/
    }
    ),

    /***/
    66: /***/
    (function(module, exports, __webpack_require__) {

        var disposed = false
        function injectStyle(ssrContext) {
            if (disposed)
                return
            __webpack_require__(67)
        }
        var Component = __webpack_require__(20)(/* script */
        __webpack_require__(68), /* template */
        __webpack_require__(69), /* styles */
        injectStyle, /* scopeId */
        null, /* moduleIdentifier (server only) */
        null)
        Component.options.__file = "/Users/jason/Documents/xmccb-web/core/public/components/project/ynet_button/index.vue"
        if (Component.esModule && Object.keys(Component.esModule).some(function(key) {
            return key !== "default" && key.substr(0, 2) !== "__"
        })) {
            console.error("named exports are not supported in *.vue files.")
        }
        if (Component.options.functional) {
            console.error("[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.")
        }

        /* hot reload */
        if (true) {
            (function() {
                var hotAPI = __webpack_require__(6)
                hotAPI.install(__webpack_require__(11), false)
                if (!hotAPI.compatible)
                    return
                module.hot.accept()
                if (!module.hot.data) {
                    hotAPI.createRecord("data-v-74d24dc0", Component.options)
                } else {
                    hotAPI.reload("data-v-74d24dc0", Component.options)
                }
                module.hot.dispose(function(data) {
                    disposed = true
                })
            }
            )()
        }

        module.exports = Component.exports

        /***/
    }
    ),

    /***/
    67: /***/
    (function(module, exports) {
    // removed by extract-text-webpack-plugin

    /***/
    }
    ),

    /***/
    68: /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
            value: true
        });
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_timers__ = __webpack_require__(82);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0_timers___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_timers__);
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //

        /* harmony default export */
        __webpack_exports__["default"] = ({
            name: 'ynet-button',
            props: {
                disabled: {
                    type: Boolean,
                    default: false
                },
                text: {
                    type: String,
                    default: ''
                },
                miniNum: {
                    type: Number,
                    default: 0
                },
                isPreventRepeat: {
                    type: Boolean,
                    default: true
                },
                isOnce: {
                    type: Boolean,
                    default: false
                }
            },

            data: function data() {
                return {
                    available: true //点击事件flag
                };
            },

            methods: {
                // 延时防重点击事件
                onClick: function onClick() {
                    var _this = this;

                    if (this.available) {
                        if (this.isOnce) {
                            this.available = false;
                        } else {
                            if (this.isPreventRepeat) {
                                this.available = false;
                                // 18-09-11 修改，延迟防重仍然存在，但不会出现disbale的样式禁用
                                Object(__WEBPACK_IMPORTED_MODULE_0_timers__["setTimeout"])(function() {
                                    _this.available = true;
                                }, 300);
                            }
                        }
                        this.$emit('click-native');
                    }
                }
            },
            computed: {
                classes: function classes() {
                    //判断有几个按钮是的样式
                    return [{
                        'ynet-btn_mini__2': this.miniNum === 2 ? true : false,
                        'ynet-btn_mini__3': this.miniNum === 3 ? true : false,
                        disabled: this.disabled
                    }];
                }
            }
        });

        /***/
    }
    ),

    /***/
    69: /***/
    (function(module, exports, __webpack_require__) {

        module.exports = {
            render: function() {
                var _vm = this;
                var _h = _vm.$createElement;
                var _c = _vm._self._c || _h;
                return _c('button', {
                    staticClass: "ynet-btn",
                    class: _vm.classes,
                    attrs: {
                        "disabled": _vm.disabled
                    },
                    on: {
                        "click": _vm.onClick
                    }
                }, [_vm._t("default", [_vm._v(_vm._s(_vm.text))])], 2)
            },
            staticRenderFns: []
        }
        module.exports.render._withStripped = true
        if (true) {
            module.hot.accept()
            if (module.hot.data) {
                __webpack_require__(6).rerender("data-v-74d24dc0", module.exports)
            }
        }

        /***/
    }
    )

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy94bV9yaXNrX2V2YWx1YXRlL2NvbXBvbmVudHMvbXVsUXVlc3Rpb25Nb2RlLnZ1ZT9mMGVjIiwid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlPzUwMTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMveG1fcmlza19ldmFsdWF0ZS9jb21wb25lbnRzL211bFF1ZXN0aW9uTW9kZS52dWU/NThmZCIsIndlYnBhY2s6Ly8vLi9zcmMveG1fc3RhdGljL29mZi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL3htX3N0YXRpYy9vbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMveG1fcmlza19ldmFsdWF0ZS9jb21wb25lbnRzL211bFF1ZXN0aW9uTW9kZS52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMveG1fcmlza19ldmFsdWF0ZS9jb21wb25lbnRzL211bFF1ZXN0aW9uTW9kZS52dWU/YjZlMyIsIndlYnBhY2s6Ly8vLi9jb3JlL3B1YmxpYy9jb21wb25lbnRzL3Byb2plY3QveW5ldF9idXR0b24vaW5kZXgudnVlPzY5NWIiLCJ3ZWJwYWNrOi8vLy4vY29yZS9wdWJsaWMvY29tcG9uZW50cy9wcm9qZWN0L3luZXRfYnV0dG9uL2luZGV4LnZ1ZT9jYWM2Iiwid2VicGFjazovLy8uL2NvcmUvcHVibGljL2NvbXBvbmVudHMvcHJvamVjdC95bmV0X2J1dHRvbi9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vY29yZS9wdWJsaWMvY29tcG9uZW50cy9wcm9qZWN0L3luZXRfYnV0dG9uL2luZGV4LnZ1ZT8yMjAyIl0sIm5hbWVzIjpbIm5hbWUiLCJjb21wb25lbnRzIiwieW5ldEJ1dHRvbiIsInByb3BzIiwicXVlc3Rpb25MaXN0IiwidHlwZSIsIkFycmF5IiwiZGVmYXVsdCIsIm1ldGhvZHMiLCJnZXRSZXN1bHQiLCIkZW1pdCIsInNlbGVjdEFuc3dlciIsInFJIiwiYUkiLCJkaXNhYmxlZCIsIkJvb2xlYW4iLCJ0ZXh0IiwiU3RyaW5nIiwibWluaU51bSIsIk51bWJlciIsImlzUHJldmVudFJlcGVhdCIsImlzT25jZSIsImRhdGEiLCJhdmFpbGFibGUiLCJvbkNsaWNrIiwic2V0VGltZW91dCIsImNvbXB1dGVkIiwiY2xhc3NlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLG1CQUFPLENBQUMsR0FBaWtCO0FBQzNrQjtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLEVBQStEO0FBQ3ZGO0FBQ0EsRUFBRSxtQkFBTyxDQUFDLEdBQW9LO0FBQzlLO0FBQ0EsRUFBRSxtQkFBTyxDQUFDLEdBQXNWO0FBQ2hXO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usc0RBQXNELElBQUk7QUFDekksbUNBQW1DOztBQUVuQztBQUNBLElBQUksSUFBVSxHQUFHO0FBQ2pCLGVBQWUsbUJBQU8sQ0FBQyxDQUFvQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFLO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7Ozs7Ozs7O0FDckNBLGFBQWEsbUJBQU8sQ0FBQyxHQUF1RDtBQUM1RSwyQkFBMkIsbUJBQU8sQ0FBQyxHQUFxRDtBQUN4Rjs7O0FBR0E7QUFDQSxjQUFjLFFBQVMsd0JBQXdCLHNLQUFzSyxpQkFBaUIsOEJBQThCLEdBQUcsdUNBQXVDLGtCQUFrQixHQUFHLDRDQUE0QyxrQ0FBa0MsK0JBQStCLDRDQUE0QyxvQ0FBb0MsOEJBQThCLEdBQUcsaURBQWlELDBCQUEwQix1QkFBdUIsNEJBQTRCLDBCQUEwQixHQUFHLDZDQUE2Qyw2QkFBNkIsOEJBQThCLHNCQUFzQixrQ0FBa0MsK0NBQStDLCtDQUErQyxrQ0FBa0Msb0NBQW9DLG9DQUFvQywyQkFBMkIsMEJBQTBCLEdBQUcsa0RBQWtE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LEdBQXFCLElBQXJCLEdBQTRCLEtBRHBEO0FBRUksb0NBQW9CLEtBQUtBLE9BQUwsS0FBaUIsQ0FBakIsR0FBcUIsSUFBckIsR0FBNEIsS0FGcEQ7QUFHSUosMEJBQVUsS0FBS0E7QUFIbkIsYUFERyxDQUFQO0FBT0g7QUFWSztBQWpEQyxDQUFmLEU7Ozs7Ozs7QUNoQkEsZ0JBQWdCLG1CQUFtQixhQUFhLDBCQUEwQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQSxJQUFJLElBQVU7QUFDZDtBQUNBO0FBQ0EsS0FBSyxtQkFBTyxDQUFDLENBQW9CO0FBQ2pDO0FBQ0EsQyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRpc3Bvc2VkID0gZmFsc2VcbmZ1bmN0aW9uIGluamVjdFN0eWxlIChzc3JDb250ZXh0KSB7XG4gIGlmIChkaXNwb3NlZCkgcmV0dXJuXG4gIHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1xcXCJvbWl0XFxcIjoxLFxcXCJyZW1vdmVcXFwiOnRydWV9IXZ1ZS1zdHlsZS1sb2FkZXIhY3NzLWxvYWRlcj97XFxcIm1pbmltaXplXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi1jMzMxOTIxMFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjpmYWxzZX0hc2Fzcy1sb2FkZXIhc2Fzcy1yZXNvdXJjZXMtbG9hZGVyP3tcXFwicmVzb3VyY2VzXFxcIjpbXFxcIi9Vc2Vycy9qYXNvbi9Eb2N1bWVudHMveG1jY2Itd2ViL2NvcmUvcHVibGljL3Njc3MvdmFycy5zY3NzXFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9zdHlsZS1sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9tdWxRdWVzdGlvbk1vZGUudnVlXCIpXG59XG52YXIgQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIikoXG4gIC8qIHNjcmlwdCAqL1xuICByZXF1aXJlKFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL3NjcmlwdC1sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9tdWxRdWVzdGlvbk1vZGUudnVlXCIpLFxuICAvKiB0ZW1wbGF0ZSAqL1xuICByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1jMzMxOTIxMFxcXCIsXFxcImhhc1Njb3BlZFxcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL2JlZm9yZS10ZW1wbGF0ZS1jb21waWxlci1sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL3RlbXBsYXRlLWxvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vbXVsUXVlc3Rpb25Nb2RlLnZ1ZVwiKSxcbiAgLyogc3R5bGVzICovXG4gIGluamVjdFN0eWxlLFxuICAvKiBzY29wZUlkICovXG4gIFwiZGF0YS12LWMzMzE5MjEwXCIsXG4gIC8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xuICBudWxsXG4pXG5Db21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcIi9Vc2Vycy9qYXNvbi9Eb2N1bWVudHMveG1jY2Itd2ViL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkuc3Vic3RyKDAsIDIpICE9PSBcIl9fXCJ9KSkge2NvbnNvbGUuZXJyb3IoXCJuYW1lZCBleHBvcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluICoudnVlIGZpbGVzLlwiKX1cbmlmIChDb21wb25lbnQub3B0aW9ucy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWUtbG9hZGVyXSBtdWxRdWVzdGlvbk1vZGUudnVlOiBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCB0ZW1wbGF0ZXMsIHRoZXkgc2hvdWxkIHVzZSByZW5kZXIgZnVuY3Rpb25zLlwiKX1cblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LWMzMzE5MjEwXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtYzMzMTkyMTBcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlXG4vLyBtb2R1bGUgaWQgPSA2MTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwidmFyIGVzY2FwZSA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qc1wiKTtcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuQGNoYXJzZXQgXFxcIlVURi04XFxcIjtcXG4vKlxcbiAqICAgTUlOSU1JWkUgUkVTRVQgU1RZTEVTXFxuICogICAgQEF1dGhvciBMaXVscyAgXFxuICpcXG4gKi9cXG4vKlxcbiAgICAqIOa3t+WQiFxcbiAgICAqIEBhdXRob3IgbGl5aWxlaVxcbiAgICAqIEBsYXRlc3QgdXBkYXRlIDIwMTguNC4yM1xcbiovXFxuLmNvbnRlbnRbZGF0YS12LWMzMzE5MjEwXSB7XFxuICB3aWR0aDogMTAwdnc7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4O1xcbn1cXG4uY29udGVudCAucXVlc3Rpb25bZGF0YS12LWMzMzE5MjEwXSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG4uY29udGVudCAucXVlc3Rpb24gPiBsaVtkYXRhLXYtYzMzMTkyMTBdIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgICAgIHBhZGRpbmc6IDAuMnJlbSAwLjNyZW07XFxuICAgICAgd2lkdGg6IC13ZWJraXQtY2FsYygxMDB2dyAtIDEuMnJlbSk7XFxuICAgICAgd2lkdGg6IGNhbGMoMTAwdncgLSAxLjJyZW0pO1xcbiAgICAgIG1hcmdpbjogLjMycmVtIGF1dG8gMDtcXG59XFxuLmNvbnRlbnQgLnF1ZXN0aW9uIC5xdWVzdGlvbltkYXRhLXYtYzMzMTkyMTBdIHtcXG4gICAgICBmb250LXNpemU6IC4zMnJlbTtcXG4gICAgICBjb2xvcjogIzMzMzMzMztcXG4gICAgICBsaW5lLWhlaWdodDogLjQ4cmVtO1xcbiAgICAgIHBhZGRpbmc6IC4yOHJlbSAwO1xcbn1cXG4uY29udGVudCAucXVlc3Rpb24gLml0ZW1bZGF0YS12LWMzMzE5MjEwXSB7XFxuICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICAgICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xcbiAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcXG4gICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgbGluZS1oZWlnaHQ6IC40cmVtO1xcbiAgICAgIHBhZGRpbmc6IC4zMnJlbSAwO1xcbn1cXG4uY29udGVudCAucXVlc3Rpb24gLml0ZW0gc3BhbltkYXRhLXYtYzMzMTkyMTBdIHtcXG4gICAgICAgIG1heC13aWR0aDogLXdlYmtpdC1jYWxjKDEwMCUgLSAuNHJlbSk7XFxuICAgICAgICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtIC40cmVtKTtcXG59XFxuLmNvbnRlbnQgLnF1ZXN0aW9uIGlucHV0W2RhdGEtdi1jMzMxOTIxMF0ge1xcbiAgICAgIHdpZHRoOiAuMzJyZW07XFxuICAgICAgaGVpZ2h0OiAuMzJyZW07XFxuICAgICAgYmFja2dyb3VuZDogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCJAeG1fc3RhdGljL29mZi5wbmdcIikpICsgXCIpIG5vLXJlcGVhdDtcXG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxufVxcbi5jb250ZW50IC5xdWVzdGlvbiAub25bZGF0YS12LWMzMzE5MjEwXSB7XFxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCJAeG1fc3RhdGljL29uLnBuZ1wiKSkgKyBcIik7XFxufVxcbi5jb250ZW50IC55bmV0LWJ0bi1ib3hbZGF0YS12LWMzMzE5MjEwXSB7XFxuICAgIG1hcmdpbi10b3A6IDEuMnJlbTtcXG4gICAgcGFkZGluZzogMCAuNnJlbTtcXG4gICAgaGVpZ2h0OiAuODhyZW07XFxuICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoMTAwJSAtIDEuMnJlbSk7XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxLjJyZW0pO1xcbn1cXG4uY29udGVudCAueW5ldC1idG4tYm94IC55bmV0LWJ0bltkYXRhLXYtYzMzMTkyMTBdIHtcXG4gICAgICB3aWR0aDogMTAwJTtcXG4gICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcIm1pbmltaXplXCI6ZmFsc2UsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtYzMzMTkyMTBcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz97XCJyZXNvdXJjZXNcIjpbXCIvVXNlcnMvamFzb24vRG9jdW1lbnRzL3htY2NiLXdlYi9jb3JlL3B1YmxpYy9zY3NzL3ZhcnMuc2Nzc1wiXX0hLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvc3R5bGUtbG9hZGVyLmpzIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9zcmMvbW9kdWxlcy94bV9yaXNrX2V2YWx1YXRlL2NvbXBvbmVudHMvbXVsUXVlc3Rpb25Nb2RlLnZ1ZVxuLy8gbW9kdWxlIGlkID0gNjEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XFxcIm1pbmltaXplXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi1jMzMxOTIxMFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzP3tcXFwicmVzb3VyY2VzXFxcIjpbXFxcIi9Vc2Vycy9qYXNvbi9Eb2N1bWVudHMveG1jY2Itd2ViL2NvcmUvcHVibGljL3Njc3MvdmFycy5zY3NzXFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9zdHlsZS1sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9tdWxRdWVzdGlvbk1vZGUudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikoXCI1MDBjNTYyOFwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1xcXCJtaW5pbWl6ZVxcXCI6ZmFsc2UsXFxcInNvdXJjZU1hcFxcXCI6ZmFsc2V9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtYzMzMTkyMTBcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6ZmFsc2V9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz97XFxcInJlc291cmNlc1xcXCI6W1xcXCIvVXNlcnMvamFzb24vRG9jdW1lbnRzL3htY2NiLXdlYi9jb3JlL3B1YmxpYy9zY3NzL3ZhcnMuc2Nzc1xcXCJdfSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvc3R5bGUtbG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vbXVsUXVlc3Rpb25Nb2RlLnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XFxcIm1pbmltaXplXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi1jMzMxOTIxMFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzP3tcXFwicmVzb3VyY2VzXFxcIjpbXFxcIi9Vc2Vycy9qYXNvbi9Eb2N1bWVudHMveG1jY2Itd2ViL2NvcmUvcHVibGljL3Njc3MvdmFycy5zY3NzXFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9zdHlsZS1sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9tdWxRdWVzdGlvbk1vZGUudnVlXCIpO1xuICAgICBpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcbiAgICAgdXBkYXRlKG5ld0NvbnRlbnQpO1xuICAgfSk7XG4gfVxuIC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3NcbiBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1wib21pdFwiOjEsXCJyZW1vdmVcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wibWluaW1pemVcIjpmYWxzZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi1jMzMxOTIxMFwiLFwic2NvcGVkXCI6dHJ1ZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzP3tcInJlc291cmNlc1wiOltcIi9Vc2Vycy9qYXNvbi9Eb2N1bWVudHMveG1jY2Itd2ViL2NvcmUvcHVibGljL3Njc3MvdmFycy5zY3NzXCJdfSEuL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9zdHlsZS1sb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlXG4vLyBtb2R1bGUgaWQgPSA2MTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL29mZi44YWUyMDY3LnBuZ1wiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3htX3N0YXRpYy9vZmYucG5nXG4vLyBtb2R1bGUgaWQgPSA2MThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL29uLjU0ZDU4ZmIucG5nXCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMveG1fc3RhdGljL29uLnBuZ1xuLy8gbW9kdWxlIGlkID0gNjE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cbmltcG9ydCB5bmV0QnV0dG9uIGZyb20gXCJAY29tcHMveW5ldF9idXR0b25cIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiBcIk11bFF1ZXN0aW9uTW9kZVwiLFxuICBjb21wb25lbnRzOiB7IHluZXRCdXR0b24gfSxcbiAgcHJvcHM6IHtcbiAgICBxdWVzdGlvbkxpc3Q6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBnZXRSZXN1bHQoKSB7XG4gICAgICB0aGlzLiRlbWl0KCdnZXRSZXN1bHQnKTtcbiAgICB9LFxuICAgIHNlbGVjdEFuc3dlcihxSSwgYUkpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdEFuc3dlcicsIHsgcUksIGFJIH0pO1xuICAgIH1cbiAgfVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlIiwibW9kdWxlLmV4cG9ydHM9e3JlbmRlcjpmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtcbiAgcmV0dXJuIF9jKCdkaXYnLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwiY29udGVudFwiXG4gIH0sIFtfYygndWwnLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwicXVlc3Rpb25cIlxuICB9LCBfdm0uX2woKF92bS5xdWVzdGlvbkxpc3QpLCBmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICAgIHJldHVybiBfYygnbGknLCB7XG4gICAgICBrZXk6IGl0ZW0ucXVlc3Rpb25cbiAgICB9LCBbX2MoJ3AnLCB7XG4gICAgICBzdGF0aWNDbGFzczogXCJxdWVzdGlvblwiXG4gICAgfSwgW192bS5fdihcIlxcbiAgICAgICAgXCIgKyBfdm0uX3MoaXRlbS5xdWVzdGlvbikgKyBcIlxcbiAgICAgIFwiKV0pLCBfdm0uX3YoXCIgXCIpLCBfYygndWwnLCB7XG4gICAgICBzdGF0aWNDbGFzczogXCJhbnN3ZXJcIlxuICAgIH0sIF92bS5fbCgoaXRlbS5hbnN3ZXIpLCBmdW5jdGlvbihhbnN3ZXIsIGFuc3dlckluZGV4KSB7XG4gICAgICByZXR1cm4gX2MoJ2xpJywge1xuICAgICAgICBrZXk6IGFuc3dlcixcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwiaXRlbVwiLFxuICAgICAgICBvbjoge1xuICAgICAgICAgIFwiY2xpY2tcIjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdEFuc3dlcihpbmRleCwgYW5zd2VySW5kZXgpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCBbX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcyhhbnN3ZXIpKV0pLCBfdm0uX3YoXCIgXCIpLCBfYygnaW5wdXQnLCB7XG4gICAgICAgIGNsYXNzOiBpdGVtLnNlbGVjdEluZGV4ID09IGFuc3dlckluZGV4ID8gJ29uJyA6ICcnLFxuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIFwidHlwZVwiOiBcImNoZWNrYm94XCJcbiAgICAgICAgfVxuICAgICAgfSldKVxuICAgIH0pLCAwKV0pXG4gIH0pLCAwKSwgX3ZtLl92KFwiIFwiKSwgX2MoJ2RpdicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJ5bmV0LWJ0bi1ib3hcIlxuICB9LCBbX2MoJ3luZXQtYnV0dG9uJywge1xuICAgIG9uOiB7XG4gICAgICBcImNsaWNrLW5hdGl2ZVwiOiBfdm0uZ2V0UmVzdWx0XG4gICAgfVxuICB9LCBbX3ZtLl92KFwiXFxuICAgICAg5byA5aeLXFxuICAgIFwiKV0pXSwgMSldKVxufSxzdGF0aWNSZW5kZXJGbnM6IFtdfVxubW9kdWxlLmV4cG9ydHMucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKS5yZXJlbmRlcihcImRhdGEtdi1jMzMxOTIxMFwiLCBtb2R1bGUuZXhwb3J0cylcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyP3tcImlkXCI6XCJkYXRhLXYtYzMzMTkyMTBcIixcImhhc1Njb3BlZFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL2JlZm9yZS10ZW1wbGF0ZS1jb21waWxlci1sb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvdGVtcGxhdGUtbG9hZGVyLmpzIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3NyYy9tb2R1bGVzL3htX3Jpc2tfZXZhbHVhdGUvY29tcG9uZW50cy9tdWxRdWVzdGlvbk1vZGUudnVlXG4vLyBtb2R1bGUgaWQgPSA2MjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwidmFyIGRpc3Bvc2VkID0gZmFsc2VcbmZ1bmN0aW9uIGluamVjdFN0eWxlIChzc3JDb250ZXh0KSB7XG4gIGlmIChkaXNwb3NlZCkgcmV0dXJuXG4gIHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1xcXCJvbWl0XFxcIjoxLFxcXCJyZW1vdmVcXFwiOnRydWV9IXZ1ZS1zdHlsZS1sb2FkZXIhY3NzLWxvYWRlcj97XFxcIm1pbmltaXplXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi03NGQyNGRjMFxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6ZmFsc2V9IXNhc3MtbG9hZGVyIXNhc3MtcmVzb3VyY2VzLWxvYWRlcj97XFxcInJlc291cmNlc1xcXCI6W1xcXCIvVXNlcnMvamFzb24vRG9jdW1lbnRzL3htY2NiLXdlYi9jb3JlL3B1YmxpYy9zY3NzL3ZhcnMuc2Nzc1xcXCJdfSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvc3R5bGUtbG9hZGVyLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vaW5kZXgudnVlXCIpXG59XG52YXIgQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIikoXG4gIC8qIHNjcmlwdCAqL1xuICByZXF1aXJlKFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL3NjcmlwdC1sb2FkZXIuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9pbmRleC52dWVcIiksXG4gIC8qIHRlbXBsYXRlICovXG4gIHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTc0ZDI0ZGMwXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZX0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL2JlZm9yZS10ZW1wbGF0ZS1jb21waWxlci1sb2FkZXIuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL3RlbXBsYXRlLWxvYWRlci5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vaW5kZXgudnVlXCIpLFxuICAvKiBzdHlsZXMgKi9cbiAgaW5qZWN0U3R5bGUsXG4gIC8qIHNjb3BlSWQgKi9cbiAgbnVsbCxcbiAgLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG4gIG51bGxcbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiL1VzZXJzL2phc29uL0RvY3VtZW50cy94bWNjYi13ZWIvY29yZS9wdWJsaWMvY29tcG9uZW50cy9wcm9qZWN0L3luZXRfYnV0dG9uL2luZGV4LnZ1ZVwiXG5pZiAoQ29tcG9uZW50LmVzTW9kdWxlICYmIE9iamVjdC5rZXlzKENvbXBvbmVudC5lc01vZHVsZSkuc29tZShmdW5jdGlvbiAoa2V5KSB7cmV0dXJuIGtleSAhPT0gXCJkZWZhdWx0XCIgJiYga2V5LnN1YnN0cigwLCAyKSAhPT0gXCJfX1wifSkpIHtjb25zb2xlLmVycm9yKFwibmFtZWQgZXhwb3J0cyBhcmUgbm90IHN1cHBvcnRlZCBpbiAqLnZ1ZSBmaWxlcy5cIil9XG5pZiAoQ29tcG9uZW50Lm9wdGlvbnMuZnVuY3Rpb25hbCkge2NvbnNvbGUuZXJyb3IoXCJbdnVlLWxvYWRlcl0gaW5kZXgudnVlOiBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCB0ZW1wbGF0ZXMsIHRoZXkgc2hvdWxkIHVzZSByZW5kZXIgZnVuY3Rpb25zLlwiKX1cblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTc0ZDI0ZGMwXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtNzRkMjRkYzBcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvcmUvcHVibGljL2NvbXBvbmVudHMvcHJvamVjdC95bmV0X2J1dHRvbi9pbmRleC52dWVcbi8vIG1vZHVsZSBpZCA9IDY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAyIDMgNCIsIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcIm9taXRcIjoxLFwicmVtb3ZlXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcIm1pbmltaXplXCI6ZmFsc2UsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtNzRkMjRkYzBcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6ZmFsc2V9IS4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/e1wicmVzb3VyY2VzXCI6W1wiL1VzZXJzL2phc29uL0RvY3VtZW50cy94bWNjYi13ZWIvY29yZS9wdWJsaWMvc2Nzcy92YXJzLnNjc3NcIl19IS4vbm9kZV9tb2R1bGVzL3Z1eC1sb2FkZXIvc3JjL3N0eWxlLWxvYWRlci5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vY29yZS9wdWJsaWMvY29tcG9uZW50cy9wcm9qZWN0L3luZXRfYnV0dG9uL2luZGV4LnZ1ZVxuLy8gbW9kdWxlIGlkID0gNjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgMyA0IiwiLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cbmltcG9ydCB7IHNldFRpbWVvdXQgfSBmcm9tICd0aW1lcnMnO1xuZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICd5bmV0LWJ1dHRvbicsXG4gICAgcHJvcHM6IHtcbiAgICAgICAgZGlzYWJsZWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICBkZWZhdWx0OiAnJ1xuICAgICAgICB9LFxuICAgICAgICBtaW5pTnVtOiB7XG4gICAgICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgICAgICBkZWZhdWx0OiAwXG4gICAgICAgIH0sXG4gICAgICAgIGlzUHJldmVudFJlcGVhdDoge1xuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICAgIGRlZmF1bHQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgaXNPbmNlOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBkYXRhKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYXZhaWxhYmxlOiB0cnVlLCAvL+eCueWHu+S6i+S7tmZsYWdcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgLy8g5bu25pe26Ziy6YeN54K55Ye75LqL5Lu2XG4gICAgICAgIG9uQ2xpY2soKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5hdmFpbGFibGUpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc09uY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hdmFpbGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1ByZXZlbnRSZXBlYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYXZhaWxhYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAxOC0wOS0xMSDkv67mlLnvvIzlu7bov5/pmLLph43ku43nhLblrZjlnKjvvIzkvYbkuI3kvJrlh7rnjrBkaXNiYWxl55qE5qC35byP56aB55SoXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAzMDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NsaWNrLW5hdGl2ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBjb21wdXRlZDoge1xuICAgICAgICBjbGFzc2VzKCkge1xuICAgICAgICAgICAgLy/liKTmlq3mnInlh6DkuKrmjInpkq7mmK/nmoTmoLflvI9cbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAneW5ldC1idG5fbWluaV9fMic6IHRoaXMubWluaU51bSA9PT0gMiA/IHRydWUgOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgJ3luZXQtYnRuX21pbmlfXzMnOiB0aGlzLm1pbmlOdW0gPT09IDMgPyB0cnVlIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiB0aGlzLmRpc2FibGVkXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb3JlL3B1YmxpYy9jb21wb25lbnRzL3Byb2plY3QveW5ldF9idXR0b24vaW5kZXgudnVlIiwibW9kdWxlLmV4cG9ydHM9e3JlbmRlcjpmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtcbiAgcmV0dXJuIF9jKCdidXR0b24nLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwieW5ldC1idG5cIixcbiAgICBjbGFzczogX3ZtLmNsYXNzZXMsXG4gICAgYXR0cnM6IHtcbiAgICAgIFwiZGlzYWJsZWRcIjogX3ZtLmRpc2FibGVkXG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgXCJjbGlja1wiOiBfdm0ub25DbGlja1xuICAgIH1cbiAgfSwgW192bS5fdChcImRlZmF1bHRcIiwgW192bS5fdihfdm0uX3MoX3ZtLnRleHQpKV0pXSwgMilcbn0sc3RhdGljUmVuZGVyRm5zOiBbXX1cbm1vZHVsZS5leHBvcnRzLnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAobW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgIHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIikucmVyZW5kZXIoXCJkYXRhLXYtNzRkMjRkYzBcIiwgbW9kdWxlLmV4cG9ydHMpXG4gIH1cbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LTc0ZDI0ZGMwXCIsXCJoYXNTY29wZWRcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvYmVmb3JlLXRlbXBsYXRlLWNvbXBpbGVyLWxvYWRlci5qcyEuL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy90ZW1wbGF0ZS1sb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vY29yZS9wdWJsaWMvY29tcG9uZW50cy9wcm9qZWN0L3luZXRfYnV0dG9uL2luZGV4LnZ1ZVxuLy8gbW9kdWxlIGlkID0gNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgMyA0Il0sInNvdXJjZVJvb3QiOiIifQ==
