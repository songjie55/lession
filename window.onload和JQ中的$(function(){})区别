JQUERY的$(function(){})和window.onload=function(){}的区别【转】
在Jquery里面，我们知道入口函数有两种写法:$(function(){}) 和$(document).ready(function(){})
作用类似于传统JavaScript中的window.onload方法，不过与window.onload方法还是有区别的。
重点内容
1.执行时间

    window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行。
    $(document).ready()是DOM结构生成完毕后就执行，不必等到加载完毕。（原生的js就是document的DOMContentLoaded事件，写法document.addEventListener('DOMContentLoaded',fn) ），比onload先执行
    还可以用readystatechange来查看文档的当前的状态，（loading —— 文档正在被加载。interactive —— 文档被解析，大概是与 DOMContentLoaded 同时发生，而不是在它之前发生。complete —— 文档和资源被加载，大概是与 window.onload 同时发生，而不是在它之前发生），用法：document.addEventListener('readystatechange', () => console.log(document.readyState));
2.编写个数不同

     window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个
     $(document).ready()可以同时编写多个，并且都可以得到执行
3.简化写法

     window.onload没有简化写法
     $(document).ready(function(){})可以简写成$(function(){});
由于在 $(document).ready() 方法内注册的事件，只要 DOM 就绪就会被执行，因此可能此时元素的关联文件未下载完。例如与图片有关的 html 下载完毕，并且已经解析为 DOM 树了，但很有可能图片还没有加载完毕，所以例如图片的高度和宽度这样的属性此时不一定有效。要解决这个问题，可以使用 Jquery 中另一个关于页面加载的方法 —load() 方法。 Load() 方法会在元素的 onload 事件中绑定一个处理函数。如果处理函数绑定给 window 对象，则会在所有内容 ( 包括窗口、框架、对象和图像等 ) 加载完毕后触发，如果处理函数绑定在元素上，则会在元素的内容加载完毕后触发。